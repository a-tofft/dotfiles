local _dirname_ = debug.getinfo(1, "S").source:sub(2):match("(.*[/\\])")

conky.config = {

	--Various settings       
		background = true,
		cpu_avg_samples = 2,
		diskio_avg_samples = 10,
		double_buffer = true,
		if_up_strictness = 'address',
		net_avg_samples = 2,
		no_buffers = true,
		temperature_unit = 'celsius',
		imlib_cache_size = 0,
    	cpu_avg_samples = 2,
    	no_buffers = true,
    	out_to_console = false,
    	out_to_stderr = false,
    	extra_newline = false,
    	own_window = true,
    	stippled_borders = 0,
    	uppercase = false,
    	use_spacer = 'none',

	-- Battery Saver:
	    update_interval_on_battery = 10,
		update_interval = 1.0,

    
    -- Placement

    	alignment = 'top_left',
    	gap_x = 20, -- 160
    	gap_y = 60,
		minimum_width = 350,
		maximum_width = 700,
		
	--Graphical

		border_inner_margin = 10,
		border_outer_margin = 10,
		draw_borders = false,
		draw_graph_borders = true,        
		draw_shades = false,
		draw_outline = false,
		show_graph_scale = false,
    	show_graph_range = false,
    	own_window_argb_visual = true,
    	own_window_transparent = false, -- true
    	own_window_argb_value = 20, -- 192  
    	own_window_type = 'desktop', -- options are: normal/override/dock/desktop/panel, --desktop for bspwm
        own_window_class = 'Conky',
        own_window_hints = 'undecorated,below,skip_taskbar,sticky,skip_pager' ,
	
	-- Text

		-- text
		font = 'JetBrains Mono:size=8',		
		format_human_readable = true,
		use_xft = true,
	    max_text_width = 0,
		short_units = true,
		xftalpha = 1,
    
    -- Colors
    	
    	default_color = 'white',
    	default_outline_color = 'white',
    	default_shade_color = 'white',        
    	-- md blue (200)
    	color1 = 'b3e5fc',										-- title color
    	
    	-- md light blue (200 -> light)
    	color2 = 'e6ffff',										-- subtitle color
    	
    	-- md blue (200)
    	color3 = '90caf9',										-- text color
    	
    	-- md dark blue (200 -> dark)
    	color4 = '90caf9'			,							-- accent color        
    	
}

conky.text = [[

#-----------------------------------------------------------------+
# SYSTEM
#-----------------------------------------------------------------+
${voffset -40}
${font :size=12}${color1} System ${hr 2}
${voffset -30}
${font}${color}
Add dotfiles             ${alignr} cd ~/.dotfiles && stow -t ~ */

Update Package List     ${alignr} sudo apt update
Upgrade Packages        ${alignr} sudo apt upgrade
Upgrade Kernel          ${alignr} sudo apt full-upgrade
Upgrade Ubuntu          ${alignr} sudo do-release-upgrade
RM files after update   ${alignr} sudo apt autoremove

#-----------------------------------------------------------------+
# NETWORK
#-----------------------------------------------------------------+
${font :size=12}${color1} Network ${hr 2}
${voffset -30}
${font}${color}
View Open Ports         ${alignr} sudo lsof -i -P -n | grep LISTEN
View Public IP          ${alignr} curl checkip.amazonaws.com
Open Port 666           ${alignr} nc -l 666
Display Routing Table   ${alignr} netstat -r
tcpdump Port            ${alignr} tcpdump -i eth1 port 80
tcpdump dst             ${alignr} tcpdump host 8.8.8.8

nmap ping sweep         ${alignr} nmap -sP 192.168.1.0/24
nmap scan top ports     ${alignr} nmap --top-ports 20 8.8.8.8

snmpwalk                ${alignr} snmpwalk -v 2c -c password 1.2.3.4

Show process on port X  ${alignr} lsof -i TCP:9090

PMTUD                   ${alignr} ping -M do -s 2000 8.8.8.8

Display Prefixes of AS-SET / AS:
 ${alignr} whois -h filtergen.level3.net RIPE::AS-NAME
 ${alignr} whois -h filtergen.level3.net RIPE::AS3301

#-----------------------------------------------------------------+
# GIT
#-----------------------------------------------------------------+
${font :size=12}${color1} GIT ${hr 2}
${voffset -30}
${font}${color}
Intiate Git Repo        ${alignr} git init
Make file executable    ${alignr} git update-index --chmod=+x my_script.sh

#-----------------------------------------------------------------+
# PYTHON
#-----------------------------------------------------------------+
${font :size=12}${color1} Python ${hr 2}
${voffset -30}
${font}${color}
Create Venv             ${alignr} python -m venv venv
Enter Venv              ${alignr} sudo ./venv/bin/activate
Exit Venv               ${alignr} deactivate

#-----------------------------------------------------------------+
# SED
#-----------------------------------------------------------------+
${font :size=12}${color1} SED ${hr 2}
${voffset -30}
${font}${color}

Replace TCP with UDP:
  sed 's/TCP/UDP/' syslog.log > modified-syslog.log
Modify file inline:     ${alignr} -i

#-----------------------------------------------------------------+
# REMOTE
#-----------------------------------------------------------------+
${font :size=12}${color1} Remote ${hr 2}
${voffset -30}
${font}${color}

Copy File To Remote:
 ${alignr} scp -i local.txt remote.txt anto@1.1.1.1:/home­/anto

Copy File From Remote:
 ${alignr} scp local.txt anto@1.1.1.1:/home­/anto/remote.txt .

#-----------------------------------------------------------------+
# VIRTUALIZATION
#-----------------------------------------------------------------+
${font :size=12}${color1} Virtualization ${hr 2}
${voffset -30}
${font}${color}

Show Docker Instances   ${alignr} docker ps -a 
Enter Docker shell      ${alignr} docker exec -it oxidized /bin/bash
Execute Docker Command  ${alignr} docker exec -it oxidized cat /etc/config

#-----------------------------------------------------------------+
# Searching
#-----------------------------------------------------------------+
${font :size=12}${color1} Search ${hr 2}
${voffset -30}
${font}${color}

Find all Directories	${alignr} find / -type d | grep "my_dir"
Find all files			${alignr} find / -type f | grep "my_file"

Ignore CaseSensitive	${alignr} | grep -i "test"
List files with match 	${alignr} | grep -l "test"
List files without match${alignr} | grep -L "test"
Grep subdirectories		${alignr} grep -r "hello" my_files/
]]